% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_validation_fxns.R
\name{find_tag_errors}
\alias{find_tag_errors}
\title{Find tag typos and suggest fixes}
\usage{
find_tag_errors(dat, tags = NA, db = db, full_output = F)
}
\arguments{
\item{dat}{A dataframe of \code{acoustic_animals} data; typically from the output of \code{prep_otn_tagging}.}

\item{tags}{A dataframe of \code{metadata_acoustictags} data that is not yet in the database to supplement tag lookups; typically the output of \code{prep_tag_sheet}.}

\item{db}{Name of SOMNI database connection object in R workspace. Defaults to "db".}

\item{full_output}{Boolean (T/F). Do you want to see the full output of the table joins between the provided data and the tags data?}
}
\value{
A dataframe containing original tag data and suggested fixes.
}
\description{
\code{find_tag_errors} will take your \code{acoustic_animals} dataframe,
compare the serial number-tag ID combinations therein to the
database and/or provided list of tag metadata, then run through
a series of logic statements to find any mismatches between
tag serial number and tag ID. It will then suggest the most
likely fix for either serial number or ID.
}
\details{
Every tag provided by Vemco/Innovasea has a unique
serial number-tag ID combination, and that is used to find any errors
in tag data. The function first runs a quick test to see if this combo
is valid - if it is, the tag most likely was the correct tag in cases
where the serial number was duplicated in \code{acoustic_animals}.
Alternatively, if the combo is valid and no duplicates were in
\code{acoustic_animals}, the code space (e.g. 'A69-9001') simply needed to be
updated.

Next, the function filters down to any remaining tags where the serial
number-vue ID combo is invalid. In these cases, either the serial number
or vue id (or both) are incorrect. The function then performs a table
join on first the original serial number ('orig_sn'), then on the
original vue ID ('orig_vid') and compares the results.

If the serial number is correct, but the vue ID is not, the join returns
a list of possible vue IDs ('possible_vid'). And vice versa, if the vue
ID is correct, the function returns a list of possible serial numbers
('possible_sn').

Finally, the possible combinations of new serial numbers and vue IDs are
tested for validity. If the new serial number-vue ID combos are valid,
the suggested combination is provided with a description of what was
updated in the 'fix' column.

The full output table includes the results of all these joins. It is
organized as follows:
\itemize{
\item \code{record_id} indicates which \code{animal_tag} record is being
tested from the original \code{acoustic_animals} dataframe.
\item \code{sn_vid} is a concatenation of the original serial number and vue id.
\item \code{valid_combo} indicates whether the \code{sn_vid} tag combination exists.
\item \code{orig_sn}, \code{orig_vid}, \code{orig_tag} stand for the original serial, vue ID, and full tag ID that were provided in the \code{acoustic_animals} dataset.
\item \code{matching_sn}, \code{possible_vid}, \code{matching_sn_tag} is tag data that was matched to the original tag based on the \code{orig_sn}.
\item \code{possible_sn}, \code{matching_vid}, \code{matching_vid_tag} is tag data that was matched to the original tag based on the \code{orig_vid}.
\item \code{suggested_sn}, \code{suggested_vid}, \code{suggested_tag} is the suggested tag data after testing that the serial-ID combination is valid.
\item \code{sn_vid_new} and \code{new_valid} are the new serial number-vue ID combination and validity of that combination with the suggested tag fixes.
\item \code{freq} indicates if any of the suggested tag fixes resulted in a duplicated tag.
\item \code{fix} Describes the suggested fix to the original tag data that needs to be made to fix any invalid tags.
}

The truncated output only includes the \code{record_id}, original tag data,
suggested tag fixes, and the \code{fix} column describing the fix.
}
\examples{
find_tag_errors(ft$acoustic_animals, tags = tags, db = db)
}
